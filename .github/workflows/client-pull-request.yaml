name: Client Pull Request

on:
  pull_request:
    branches:
      - main
    paths:
      - games/*/client/**

jobs:
  changed-files:
    runs-on: ubuntu-latest
    name: Test changed-files
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with: 
          dir_names: true
          dir_names_max_depth: 2
          matrix: true
          files: |
            games/*/client/**
      
        name: Create Build Matrix
        id: create-matrix
        run: |
          MATRIX=[]
          CONFIG=$(cat build-config.yml | yq e '.' -)
          for DIR in ${{ steps.changed-files.outputs.all_changed_files }}; do
            GAME=$(basename $DIR)
            VARIANTS=$(echo "$CONFIG" | yq e ".games.${GAME}.variants[]" -)
            if [[ -n "$VARIANTS" ]]; then
              for VARIANT in $VARIANTS; do
                MATRIX+=("{\"directory\":\"$DIR\",\"build_command\":\"npm run build:$VARIANT\"}")
              done
            else
              MATRIX+=("{\"directory\":\"$DIR\",\"build_command\":\"npm run build\"}")
            fi
          done
          echo "matrix=$(echo ${MATRIX[@]} | jq -s '.')" >> $GITHUB_OUTPUT
  
  matrix-job:
    runs-on: ubuntu-latest
    name: Run Matrix Job
    needs: [changed-files]
    strategy:
      matrix: 
        directories: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          echo ${{ matrix.directories }}